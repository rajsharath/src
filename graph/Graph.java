package graph;

import java.util.ArrayList;
import java.util.List;


/**
 * TODO: Insert description here. (generated by srallabandi)
 */
public class Graph {
  int V;
  int E;
  List<Integer>[] adj;

  public Graph() {
    String in = "4  2 \n 2  3 \n 3  2 \n 6  0 \n 0  1 \n 2  0 \n 11 12 \n" +
        "12  9 \n 9 10 \n 9 11 \n 7  9 \n 10 12 \n 11  4 \n 4  3 \n  3  5 \n" +
        "6  8 \n  8  6 \n  5  4 \n 0  5 \n 6  4 \n 6  9 \n 7 6 ";
    this.V = 13;
    this.E = 22;
    adj = new ArrayList[V];
    for (int v = 0; v < V; v++) {
      adj[v] = new ArrayList<Integer>();
    }
    addEdge(4, 2);
    addEdge(2, 3);
    addEdge(3, 2);
    addEdge(6, 0);
    addEdge(0, 1);
    
    addEdge(2, 0);
    addEdge(11, 12);
    addEdge(12, 9);
    addEdge(9, 10);
    addEdge(9, 11);
    
    addEdge(7, 9);
    addEdge(10, 12);
    addEdge(11, 4);
    addEdge(4, 3);
    addEdge(3, 5);
    
    addEdge(6, 8);
    addEdge(8, 6);
    addEdge(5, 4);
    addEdge(0, 5);
    addEdge(6, 4);
    
    addEdge(6, 9);
    addEdge(7, 6);    
  }
  
  public void addEdge(int v, int w) {
    E++;
    adj[v].add(w);
    adj[w].add(v);
}
  
  /**
   * Return a string representation of the graph.
   */
  @Override
  public String toString() {
      StringBuilder s = new StringBuilder();
      String NEWLINE = System.getProperty("line.separator");
      s.append(V + " vertices, " + E + " edges " + NEWLINE);
      for (int v = 0; v < V; v++) {
          s.append(v + ": ");
          for (int w : adj[v]) {
              s.append(w + " ");
          }
          s.append(NEWLINE);
      }
      return s.toString();
  }

  /**
   * @param args
   */
  public static void main(String[] args) {
    Graph g = new Graph();
    System.out.println(g.toString());
  }
}
